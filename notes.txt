Learning AngularJS

Components
    - every angular app has at least one component that we call the Root Component
    - a component can contain other components as well.
    - this helps us manage our view into more reusable parts.
    - A component is a typescript class:
        it can have properties and methods that hold the data for the view
        - properies hold data
        - methods perform the actions
    - components are not attached to the DOM. 
        - we use bindings and bind to the properties and methods of our views
        - we never need a reference to a dom element in order to update it
        - ie: we can do onClick() calls that are decoupled from the dom (this makes it very easy to unit test)
    
Services
    - a class that does anything 

Router
    - decides what component to present to the user

Directive
    - we use directives to modify DOM elements and or extend their behaviour.
    - we can use a directive to make a text box automatically grow when it recieves focus:
        <input type="text" autoGrow/>

Video tutorial: https://www.youtube.com/watch?v=_-CD_5YhJTA  

PROJECT FILES
    boot.ts 
        - bootstraps Angular and loads the root component into the DOM
    app.component.ts
        - the root component of our app
    tsconfig.json
        - typescript transpiler config for our project
    typings.json
        - gives us type checking and intellisense
        - typescript definition file
    
    package.json   
        - the start command runs typescript in watch mode AND it runs angular web server 
            in lite mode concurrently.
        
All Typescript classes are essentially just JavaScript classes with decorators
    on them.

How Do We Use A Component In Another Component?
    - We specify it as a directive attribute inside of our component.
    - App

